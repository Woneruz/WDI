import random

# Rozmiar szachownicy i lista przechowujÄ…ca pozycje hetmanÃ³w
rozmiar_szachownicy = 100
hetmany = []  # Lista pozycji hetmanÃ³w [(w1, k1), (w2, k2), ...] - jak w poleceniu

# Funkcja dodajÄ…ca hetmana na szachownicÄ™
def dodaj_hetmana(wiersz, kolumna):
    if 1 <= wiersz <= rozmiar_szachownicy and 1 <= kolumna <= rozmiar_szachownicy:  # Sprawdzenie poprawnoÅ›ci pozycji
        if (wiersz, kolumna) not in hetmany:  # Czy pozycja nie jest zajÄ™ta
            hetmany.append((wiersz, kolumna))  # Dodanie pozycji hetmana do listy
        else:
            raise ValueError(f"Na pozycji ({wiersz}, {kolumna}) juÅ¼ znajduje siÄ™ hetman.")  # JeÅ›li pozycja zajÄ™ta
    else:
        raise ValueError("Pozycja poza zakresem szachownicy.")  # JeÅ›li pozycja poza plansza

# Funkcja losowo N hetmanÃ³w
def losowe_hetmany(n):
    global hetmany  # UÅ¼ywamy globalnej listy hetmany
    hetmany = []  # CzyÅ›cimy listÄ™
    pozycje = set()  # ZbiÃ³r przechowujÄ…cy zajÄ™te pozycje
    while len(pozycje) < n:  # DopÃ³ki nie ustawimy N hetmanÃ³w
        wiersz = random.randint(1, rozmiar_szachownicy)
        kolumna = random.randint(1, rozmiar_szachownicy)
        if (wiersz, kolumna) not in pozycje:  # Sprawdzamy, czy pozycja jest wolna
            dodaj_hetmana(wiersz, kolumna)  # Dodajemy hetmana
            pozycje.add((wiersz, kolumna))  # Zapisujemy pozycjÄ™ jako zajÄ™tÄ…

# Funkcja sprawdzajÄ…ca czy hetany siÄ™ nie szachujÄ…
def czy_szach():
    for i in range(len(hetmany)):  # PÄ™tla po kaÅ¼dym hetmanie
        for j in range(i + 1, len(hetmany)):  # PorÃ³wnujemy go z kloejnymi hetmanami
            h1 = hetmany[i]
            h2 = hetmany[j]
            if (h1[0] == h2[0] or  # Ten sam wiersz
                h1[1] == h2[1] or  # Ta sama kolumna
                abs(h1[0] - h2[0]) == abs(h1[1] - h2[1])):  # Ta sama przekÄ…tna
                return False  # Hetmany siÄ™ szachujÄ…
    return True  # Å»adne dwa hetmany siÄ™ nie szachujÄ…

# Funkcja wizualizujÄ…ca szachownicÄ™
def wizualizuj(plik="szachownica.txt"):
    # Tworzymy pustÄ… szachownicÄ™
    szachownica = [["." for _ in range(rozmiar_szachownicy)] for _ in range(rozmiar_szachownicy)]
    for wiersz, kolumna in hetmany:  # Umieszczamy hetmanÃ³w na planszy
        szachownica[wiersz - 1][kolumna - 1] = "H"

    # WyÅ›wietlenie szachownicy w konsoli
    #for w in szachownica:
    #    print(" ".join(w))

    # Zapis szachownicy do pliku
    with open(plik, "w") as f:
        for w in szachownica:
            f.write(" ".join(w) + "\n")

    # Odczyt szachownicy z pliku i wyÅ›wietlenie w konsoli
    with open(plik, "r") as f:
        print(f.read())

# GÅ‚Ã³wny program
def main():
    global hetmany  # UÅ¼ywamy globalnej listy `hetmany`
    print("Wybierz sposÃ³b rozmieszczenia hetmanÃ³w:")
    print("1. Losowe rozmieszczenie")
    print("2. Wprowadzenie wÅ‚asnych pozycji")
    wybor = input("Podaj numer opcji (1 lub 2): ")

    if wybor == "1":
        # Wybieranie czy losowaÄ‡ liczbÄ™ hetmanÃ³w, czy podaÄ‡ jÄ… rÄ™cznie
        print("Chcesz wylosowaÄ‡ liczbÄ™ hetmanÃ³w czy podaÄ‡ jÄ… samemu?")
        print("1. Wylosuj liczbÄ™ hetmanÃ³w")
        print("2. Podaj liczbÄ™ hetmanÃ³w")
        wybor_liczby = input("Podaj numer opcji (1 lub 2): ")
        if wybor_liczby == "1":
            n = random.randint(1, 99)  # Losowa liczba od 1 do 99
            print(f"Wylosowana liczba hetmanÃ³w: {n}")
        elif wybor_liczby == "2":
            n = int(input("Podaj liczbÄ™ hetmanÃ³w (maks. 99): "))
            if n >= 100:
                print("Liczba hetmanÃ³w musi byÄ‡ mniejsza niÅ¼ 100.")
                return
        else:
            print("Niepoprawny wybÃ³r!")
            return
        losowe_hetmany(n)  # Losowe ustawienie hetmanÃ³w

    elif wybor == "2":
        # Podawanie liczbÄ™ i pozycje hetmanÃ³w
        n = int(input("Podaj liczbÄ™ hetmanÃ³w: "))
        for i in range(n):
            while True:
                try:
                    print(f"Podaj pozycjÄ™ dla hetmana {i + 1}:")
                    wiersz = int(input("Wiersz (od 1 do 100): "))
                    kolumna = int(input("Kolumna (od 1 do 100): "))
                    dodaj_hetmana(wiersz, kolumna)  # Dodanie hetmana na podanÄ… pozycjÄ™
                    break
                except ValueError as e:
                    print(e)
                    print("SprÃ³buj jeszcze raz!")
    else:
        print("Niepoprawny wybÃ³r!")
        return

    # Wizualizacja szachownicy (nie symulacja ğŸ˜˜)
    print("Wizualizacja szachownicy:")
    wizualizuj()

    # Sprawdzanie czy hetmany siÄ™ szachujÄ…
    if czy_szach():
        print("Å»adne hetmany siÄ™ nie szachujÄ… âœ¨")
    else:
        print("Hetmany siÄ™ szachujÄ… ğŸ˜¯ğŸ˜¯")

main()
